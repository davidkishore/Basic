{"ast":null,"code":"import Axios from \"axios\";\nexport const REGISTER_USER_INFO_REQUEST = \"REGISTER_USER_INFO_REQUEST\";\nexport const REGISTER_USER_INFO_SUCCESS = \"REGISTER_USER_INFO_SUCCESS\";\nexport const REGISTER_USER_INFO_FAILURE = \"REGISTER_USER_INFO_FAILURE\"; // export const registerUserRequest = () => {\n//   return {\n//     type: REGISTER_USER_INFO_REQUEST,\n//   };\n// };\n// export const registerUserSuccess = (user) => {\n//   return {\n//     type: REGISTER_USER_INFO_SUCCESS,\n//     payload: user,\n//   };\n// };\n// export const registerUserError = (err) => {\n//   return {\n//     type: REGISTER_USER_INFO_FAILURE,\n//     err,\n//   };\n// };\n// export function RegisterUserInfo(data) {\n//   const { employeeName, password, email, employeeId, phone, role } = data;\n//   return (dispatch) => {\n//     dispatch(registerUserRequest());\n//     const requestBody = {\n//       employeeName: employeeName,\n//       password: password,\n//       email: email,\n//       employeeId: employeeId,\n//       phoneNumber: phone,\n//       role: role,\n//     };\n//     Axios.post(\n//       \"https://cors.bridged.cc/https://nueveapp.herokuapp.com/register\",\n//       requestBody\n//     )\n//       .then((res) => {\n//         dispatch(registerUserSuccess(res.data));\n//       })\n//       .catch((err) => {\n//         dispatch(registerUserError(err));\n//       });\n//   };\n// }\n\nexport function RegisterUserInfo(data) {\n  return {\n    type: \"Registration\",\n    payload: data\n  };\n}\n_c = RegisterUserInfo;\nexport function myAction(data) {\n  return dispatch => {\n    dispatch({\n      type: ACTION_TYPE,\n      data\n    }).then(response => {\n      dispatch(push(\"/my_url\"));\n    });\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterUserInfo\");","map":{"version":3,"sources":["/home/bala/Documents/kishore/react/basic/src/redux/actions/Register_actions.js"],"names":["Axios","REGISTER_USER_INFO_REQUEST","REGISTER_USER_INFO_SUCCESS","REGISTER_USER_INFO_FAILURE","RegisterUserInfo","data","type","payload","myAction","dispatch","ACTION_TYPE","then","response","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC,C,CAEP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAE,cADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID;KALeD,gB;AAOhB,OAAO,SAASI,QAAT,CAAkBH,IAAlB,EAAwB;AAC7B,SAAQI,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAEI,WADC;AAEPL,MAAAA;AAFO,KAAD,CAAR,CAGGM,IAHH,CAGSC,QAAD,IAAc;AACpBH,MAAAA,QAAQ,CAACI,IAAI,CAAC,SAAD,CAAL,CAAR;AACD,KALD;AAMD,GAPD;AAQD","sourcesContent":["import Axios from \"axios\";\nexport const REGISTER_USER_INFO_REQUEST = \"REGISTER_USER_INFO_REQUEST\";\nexport const REGISTER_USER_INFO_SUCCESS = \"REGISTER_USER_INFO_SUCCESS\";\nexport const REGISTER_USER_INFO_FAILURE = \"REGISTER_USER_INFO_FAILURE\";\n\n// export const registerUserRequest = () => {\n//   return {\n//     type: REGISTER_USER_INFO_REQUEST,\n//   };\n// };\n\n// export const registerUserSuccess = (user) => {\n//   return {\n//     type: REGISTER_USER_INFO_SUCCESS,\n//     payload: user,\n//   };\n// };\n\n// export const registerUserError = (err) => {\n//   return {\n//     type: REGISTER_USER_INFO_FAILURE,\n//     err,\n//   };\n// };\n\n// export function RegisterUserInfo(data) {\n//   const { employeeName, password, email, employeeId, phone, role } = data;\n\n//   return (dispatch) => {\n//     dispatch(registerUserRequest());\n//     const requestBody = {\n//       employeeName: employeeName,\n//       password: password,\n//       email: email,\n//       employeeId: employeeId,\n//       phoneNumber: phone,\n//       role: role,\n//     };\n\n//     Axios.post(\n//       \"https://cors.bridged.cc/https://nueveapp.herokuapp.com/register\",\n//       requestBody\n//     )\n//       .then((res) => {\n//         dispatch(registerUserSuccess(res.data));\n//       })\n//       .catch((err) => {\n//         dispatch(registerUserError(err));\n//       });\n//   };\n// }\n\nexport function RegisterUserInfo(data) {\n  return {\n    type: \"Registration\",\n    payload: data,\n  };\n}\n\nexport function myAction(data) {\n  return (dispatch) => {\n    dispatch({\n      type: ACTION_TYPE,\n      data,\n    }).then((response) => {\n      dispatch(push(\"/my_url\"));\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}