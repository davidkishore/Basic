{"ast":null,"code":"import Axios from \"axios\";\nexport const REGISTER_USER_INFO_REQUEST = \"REGISTER_USER_INFO_REQUEST\";\nexport const REGISTER_USER_INFO_SUCCESS = \"REGISTER_USER_INFO_SUCCESS\";\nexport const REGISTER_USER_INFO_FAILURE = \"REGISTER_USER_INFO_FAILURE\";\nexport const registerUserRequest = () => {\n  return {\n    type: REGISTER_USER_INFO_REQUEST\n  };\n};\nexport const registerUserSuccess = user => {\n  console.log(\"user123\", user);\n  return {\n    type: REGISTER_USER_INFO_SUCCESS,\n    payload: user\n  };\n};\nexport const registerUserError = err => {\n  return {\n    type: REGISTER_USER_INFO_FAILURE,\n    err\n  };\n};\nexport function RegisterUserInfo(data) {\n  const {\n    employeeName,\n    password,\n    email,\n    employeeId,\n    phone,\n    role\n  } = data;\n  console.log(\"data Register\", data);\n  return dispatch => {\n    dispatch(registerUserRequest());\n    const requestBody = {\n      employeeName: employeeName,\n      password: password,\n      email: email,\n      employeeId: employeeId,\n      phoneNumber: phone,\n      role: role\n    };\n    console.log(requestBody, \"request body\");\n    Axios.post(\"https://cors.bridged.cc/https://nueveapp.herokuapp.com/register\", requestBody) //.then(res=>res.json())\n    .then(res => {\n      console.log(\"res1233\", res.data);\n      dispatch(registerUserSuccess(res.data));\n    }).catch(err => {\n      dispatch(registerUserError(err));\n    });\n  };\n}\n_c = RegisterUserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterUserInfo\");","map":{"version":3,"sources":["/home/bala/Documents/kishore/react/basic/src/redux/actions/Register_actions.js"],"names":["Axios","REGISTER_USER_INFO_REQUEST","REGISTER_USER_INFO_SUCCESS","REGISTER_USER_INFO_FAILURE","registerUserRequest","type","registerUserSuccess","user","console","log","payload","registerUserError","err","RegisterUserInfo","data","employeeName","password","email","employeeId","phone","role","dispatch","requestBody","phoneNumber","post","then","res","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMK,mBAAmB,GAAIC,IAAD,IAAU;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AACA,SAAO;AACLF,IAAAA,IAAI,EAAEH,0BADD;AAELQ,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID,CANM;AAQP,OAAO,MAAMI,iBAAiB,GAAIC,GAAD,IAAS;AACxC,SAAO;AACLP,IAAAA,IAAI,EAAEF,0BADD;AAELS,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AACrC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,UAAjC;AAA6CC,IAAAA,KAA7C;AAAoDC,IAAAA;AAApD,MAA6DN,IAAnE;AAEAN,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,IAA7B;AACA,SAAQO,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACjB,mBAAmB,EAApB,CAAR;AACA,UAAMkB,WAAW,GAAG;AAClBP,MAAAA,YAAY,EAAEA,YADI;AAElBC,MAAAA,QAAQ,EAAEA,QAFQ;AAGlBC,MAAAA,KAAK,EAAEA,KAHW;AAIlBC,MAAAA,UAAU,EAAEA,UAJM;AAKlBK,MAAAA,WAAW,EAAEJ,KALK;AAMlBC,MAAAA,IAAI,EAAEA;AANY,KAApB;AASAZ,IAAAA,OAAO,CAACC,GAAR,CAAYa,WAAZ,EAAyB,cAAzB;AACAtB,IAAAA,KAAK,CAACwB,IAAN,CACE,iEADF,EAEEF,WAFF,EAIE;AAJF,KAKGG,IALH,CAKSC,GAAD,IAAS;AACblB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBiB,GAAG,CAACZ,IAA3B;AACAO,MAAAA,QAAQ,CAACf,mBAAmB,CAACoB,GAAG,CAACZ,IAAL,CAApB,CAAR;AACD,KARH,EASGa,KATH,CASUf,GAAD,IAAS;AACdS,MAAAA,QAAQ,CAACV,iBAAiB,CAACC,GAAD,CAAlB,CAAR;AACD,KAXH;AAYD,GAxBD;AAyBD;KA7BeC,gB","sourcesContent":["import Axios from \"axios\";\nexport const REGISTER_USER_INFO_REQUEST = \"REGISTER_USER_INFO_REQUEST\";\nexport const REGISTER_USER_INFO_SUCCESS = \"REGISTER_USER_INFO_SUCCESS\";\nexport const REGISTER_USER_INFO_FAILURE = \"REGISTER_USER_INFO_FAILURE\";\n\nexport const registerUserRequest = () => {\n  return {\n    type: REGISTER_USER_INFO_REQUEST,\n  };\n};\n\nexport const registerUserSuccess = (user) => {\n  console.log(\"user123\", user);\n  return {\n    type: REGISTER_USER_INFO_SUCCESS,\n    payload: user,\n  };\n};\n\nexport const registerUserError = (err) => {\n  return {\n    type: REGISTER_USER_INFO_FAILURE,\n    err,\n  };\n};\n\nexport function RegisterUserInfo(data) {\n  const { employeeName, password, email, employeeId, phone, role } = data;\n\n  console.log(\"data Register\", data);\n  return (dispatch) => {\n    dispatch(registerUserRequest());\n    const requestBody = {\n      employeeName: employeeName,\n      password: password,\n      email: email,\n      employeeId: employeeId,\n      phoneNumber: phone,\n      role: role,\n    };\n\n    console.log(requestBody, \"request body\");\n    Axios.post(\n      \"https://cors.bridged.cc/https://nueveapp.herokuapp.com/register\",\n      requestBody\n    )\n      //.then(res=>res.json())\n      .then((res) => {\n        console.log(\"res1233\", res.data);\n        dispatch(registerUserSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(registerUserError(err));\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}